LTime <- function(T){
  T <- T + rexp(1,2)
  T <- T + rnorm(1, 10, sqrt(5))
  bp <- runif(1,0,10)
  if (bp > 9)
    T <- T + rexp(1,4)
  return(T)
}

Aeropuerto <- function(T){
  t <- 0 # tiempo de llegada de un avion
  N <- 0 # total de aviones en cola
  OtList <- c(0,0,0,0,0) # vector con el tiempo de salida del ultima avion que uso cada pista
  FtList <- c(0,0,0,0,0) # vector con el tiempo libre por pista
  t <- t + rexp(1,3)
  while(t < T && min(OtList) < T){
    minp <- which.min(OtList)
    if (OtList[minp] > t)
      N <- N + 1
    else if (N == 0){
      FtList[minp] <- FtList[minp] + (t - OtList[minp])
      OtList[minp] <- LTime(t)
    }
    else {
      OtList[minp] <- LTime(OtList[minp])
      minp <- which.min(OtList)
      while (OtList[minp] <= t && N > 0)
      {
        OtList[minp] <- LTime(OtList[minp])
        N <- N - 1
        minp <- which.min(OtList)
      }
    }
    t <- t + rexp(1,3)
  }
  return(FtList)
}

MonteCarlo <- function(T){
  t <- 1
  p1 <- c()
  p2 <- c()
  p3 <- c()
  p4 <- c()
  p5 <- c()
  while(t <= T)
  {
    result <- Aeropuerto(168)
    p1[t] <- result[1] * 60
    p2[t] <- result[2] * 60
    p3[t] <- result[3] * 60
    p4[t] <- result[4] * 60
    p5[t] <- result[5] * 60
    t <- t + 1
  }
  result <- c()
  result[1] <- mean(p1)
  result[2] <- mean(p2)
  result[3] <- mean(p3)
  result[4] <- mean(p4)
  result[5] <- mean(p5)
  return(result)
}

SuperMonteCarlo <- function(T){
  t <- 1
  p1 <- c()
  p2 <- c()
  p3 <- c()
  p4 <- c()
  p5 <- c()
  while(t <= T)
  {
    result <- MonteCarlo(1000)
    p1[t] <- result[1]
    p2[t] <- result[2]
    p3[t] <- result[3]
    p4[t] <- result[4]
    p5[t] <- result[5]
    t <- t + 1
  }
  result <- c()
  result[1] <- min(p1)
  result[2] <- max(p1)
  result[3] <- min(p2)
  result[4] <- max(p2)
  result[5] <- min(p3)
  result[6] <- max(p3)
  result[7] <- min(p4)
  result[8] <- max(p4)
  result[9] <- min(p5)
  result[10] <- max(p5)
  return(result)
}
