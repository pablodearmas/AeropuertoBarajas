function(T){
}
LTime (10)
LTime (10)
LTime <- function(T){
T <- T + rexp(1,30)
T <- T + rnorm(1, 10, sqrt(5))
bp <- runif(1,0,10)
if (bp > 9)
T <- T + rexp(1,15)
return(T)
}
LTime(10)
rexp(30)
rexp(1, 30)
rnorm
rnorm(1)
rnorm(1, 10, sqrt(5))
rexp(1, 15)
if (4 == 4 && 5 == 5){}
if (4 == 4 && 5 == 5){
s <- 2}
Aeropuerto <- function(T){
t <- 0 # tiempo de llegada de un avion
N <- 0 # total de aviones en cola
OtList <- c(0,0,0,0,0) # vector con el tiempo de salida del ultima avion que uso cada pista
FtList <- c(0,0,0,0,0) # vector con el tiempo libre por pista
t <- t + rexp(1,20)
while(t < T && min(OtList) < T){
minp <- which.min(OtList)
if (OtList[minp] > t)
N <- N + 1
else if (N == 0){
FtList[minp] <- FtList[minp] + (t - OtList[minp])
OtList[minp] <- LTime(t)
}
else {
OtList[minp] <- LTime(OtList[minp])
minp <- which.min(OtList)
while (OtList[minp] <= t && N > 0)
{
OtList[minp] <- LTime(OtList[minp])
N <- N - 1
minp <- which.min(OtList)
}
}
t <- t + rexp(1,20)
}
return(FtList)
}
Aeropuerto(504)
Aeropuerto(10080)
View(Aeropuerto)
LTime <- function(T){
T <- T + rexp(1,2)
T <- T + rnorm(1, 10, sqrt(5))
bp <- runif(1,0,10)
if (bp > 9)
T <- T + rexp(1,4)
return(T)
}
Aeropuerto <- function(T){
t <- 0 # tiempo de llegada de un avion
N <- 0 # total de aviones en cola
OtList <- c(0,0,0,0,0) # vector con el tiempo de salida del ultima avion que uso cada pista
FtList <- c(0,0,0,0,0) # vector con el tiempo libre por pista
t <- t + rexp(1,3)
while(t < T && min(OtList) < T){
minp <- which.min(OtList)
if (OtList[minp] > t)
N <- N + 1
else if (N == 0){
FtList[minp] <- FtList[minp] + (t - OtList[minp])
OtList[minp] <- LTime(t)
}
else {
OtList[minp] <- LTime(OtList[minp])
minp <- which.min(OtList)
while (OtList[minp] <= t && N > 0)
{
OtList[minp] <- LTime(OtList[minp])
N <- N - 1
minp <- which.min(OtList)
}
}
t <- t + rexp(1,3)
}
return(FtList)
}
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(168)
p1[t] <- result[1] * 60
p2[t] <- result[2] * 60
p3[t] <- result[3] * 60
p4[t] <- result[4] * 60
p5[t] <- result[5] * 60
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
Montecarlo(10000)
MonteCarlo(10000)
Aeropuerto(10)
Aeropuerto(168)
MonteCarlo(10)
MonteCarlo(100)
MonteCarlo(10000)
LTime <- function(T){
T <- T + rexp(1,30)
T <- T + rnorm(1, 10, sqrt(5))
bp <- runif(1,0,10)
if (bp > 9)
T <- T + rexp(1,15)
return(T)
}
LTime <- function(T){
T <- T + rexp(1,30)
T <- T + rnorm(1, 10, sqrt(5))
bp <- runif(1,0,10)
if (bp > 9)
T <- T + rexp(1,15)
return(T)
}
Aeropuerto <- function(T){
t <- 0 # tiempo de llegada de un avion
N <- 0 # total de aviones en cola
OtList <- c(0,0,0,0,0) # vector con el tiempo de salida del ultima avion que uso cada pista
FtList <- c(0,0,0,0,0) # vector con el tiempo libre por pista
t <- t + rexp(1,20)
while(t < T && min(OtList) < T){
minp <- which.min(OtList)
if (OtList[minp] > t)
N <- N + 1
else if (N == 0){
FtList[minp] <- FtList[minp] + (t - OtList[minp])
OtList[minp] <- LTime(t)
}
else {
OtList[minp] <- LTime(OtList[minp])
minp <- which.min(OtList)
while (OtList[minp] <= t && N > 0)
{
OtList[minp] <- LTime(OtList[minp])
N <- N - 1
minp <- which.min(OtList)
}
}
t <- t + rexp(1,20)
}
return(FtList)
}
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(10080)
p1[t] <- result[1] * 60
p2[t] <- result[2] * 60
p3[t] <- result[3] * 60
p4[t] <- result[4] * 60
p5[t] <- result[5] * 60
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
MonteCarlo(10)
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(10080)
p1[t] <- result[1]
p2[t] <- result[2]
p3[t] <- result[3]
p4[t] <- result[4]
p5[t] <- result[5]
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(10080)
p1[t] <- result[1]
p2[t] <- result[2]
p3[t] <- result[3]
p4[t] <- result[4]
p5[t] <- result[5]
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
MonteCarlo(10)
LTime <- function(T){
T <- T + rexp(1,2)
T <- T + rnorm(1, 10, sqrt(5))
bp <- runif(1,0,10)
if (bp > 9)
T <- T + rexp(1,4)
return(T)
}
Aeropuerto <- function(T){
t <- 0 # tiempo de llegada de un avion
N <- 0 # total de aviones en cola
OtList <- c(0,0,0,0,0) # vector con el tiempo de salida del ultima avion que uso cada pista
FtList <- c(0,0,0,0,0) # vector con el tiempo libre por pista
t <- t + rexp(1,3)
while(t < T && min(OtList) < T){
minp <- which.min(OtList)
if (OtList[minp] > t)
N <- N + 1
else if (N == 0){
FtList[minp] <- FtList[minp] + (t - OtList[minp])
OtList[minp] <- LTime(t)
}
else {
OtList[minp] <- LTime(OtList[minp])
minp <- which.min(OtList)
while (OtList[minp] <= t && N > 0)
{
OtList[minp] <- LTime(OtList[minp])
N <- N - 1
minp <- which.min(OtList)
}
}
t <- t + rexp(1,3)
}
return(FtList)
}
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(504)
p1[t] <- result[1]
p2[t] <- result[2]
p3[t] <- result[3]
p4[t] <- result[4]
p5[t] <- result[5]
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(504)
p1[t] <- result[1]
p2[t] <- result[2]
p3[t] <- result[3]
p4[t] <- result[4]
p5[t] <- result[5]
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
MonteCarlo(10)
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(504)
p1[t] <- result[1] * 20
p2[t] <- result[2] * 20
p3[t] <- result[3] * 20
p4[t] <- result[4] * 20
p5[t] <- result[5] * 20
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
MonteCarlo(10)
Montecarlo(100)
MonteCarlo(100)
MonteCarlo(1000)
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(504)
p1[t] <- result[1] * 60
p2[t] <- result[2] * 60
p3[t] <- result[3] * 60
p4[t] <- result[4] * 60
p5[t] <- result[5] * 60
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
MonteCarlo(1000)
MonteCarlo(100000)
LTime(10)
LTime(10)
LTime(10)
rexp(1,2)
rexp(1,2) * 60
rexp(1,2) * 60
rnorm(1,10, sqrt(5))
rnorm(1,10, sqrt(5))
rnorm(1,10, sqrt(5))
rnorm(1,10, sqrt(5))
rnorm(1,10, 5)
rnorm(1,10, 5)
rnorm(1,10, 5)
rnorm(1,10, 5)
rnorm(1,10, 5)
rnorm(1,10, 5)
rexp(1,4)
rexp(1,4)
rexp(1,4)
rexp(1,4)
rexp(1,4)
rexp(1,4)
rexp(1,4)
rexp(1,4)
rexp(1,4)
MonteCarlo <- function(T){
t <- 1
p1 <- c()
p2 <- c()
p3 <- c()
p4 <- c()
p5 <- c()
while(t <= T)
{
result <- Aeropuerto(168)
p1[t] <- result[1] * 60
p2[t] <- result[2] * 60
p3[t] <- result[3] * 60
p4[t] <- result[4] * 60
p5[t] <- result[5] * 60
t <- t + 1
}
result <- c()
result[1] <- mean(p1)
result[2] <- mean(p2)
result[3] <- mean(p3)
result[4] <- mean(p4)
result[5] <- mean(p5)
return(result)
}
rexp(1,3)
rexp(1,3)
rexp(1,3)
rexp(1,3)
rexp(1,3)
rexp(1,3)
MonteCarlo(10)
MonteCarlo(100)
MonteCarlo(1000)
MonteCarlo(10000)
source('C:/School/Works/Pablo/SimulacionAeropuerto/SimulacionAeropuerto.Rproj')
source('C:/School/Works/Pablo/SimulacionAeropuerto/SimulacionAeropuerto.Rproj')
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(LTime)
View(MonteCarlo)
View(LTime)
View(Aeropuerto)
View(MonteCarlo)
MonteCarlo(10)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
load("C:/School/Works/Pablo/SimulacionAeropuerto/.RData")
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(Aeropuerto)
View(LTime)
View(LTime)
View(MonteCarlo)
source('C:/School/Works/Pablo/SimulacionAeropuerto/SimulacionAeropuerto.Rproj')
View(Aeropuerto)
source('C:/School/Works/Pablo/SimulacionAeropuerto/.RData', encoding = 'UTF-8')
source('C:/School/Works/Pablo/SimulacionAeropuerto/SimulacionAeropuerto.Rproj', encoding = 'UTF-8')
View(Aeropuerto)
